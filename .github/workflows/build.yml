# name: Build Electron App
# env:
#   GH_TOKEN: ${{ secrets.GH_TOKEN }}
# on:
#   push:
#     branches:
#       - main
#   workflow_dispatch:

# jobs:
#   build-windows:
#     runs-on: windows-latest
#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v3

#       - name: Set up Node.js
#         uses: actions/setup-node@v3
#         with:
#           node-version: '20'

#       - name: Install dependencies
#         run: npm install

#       - name: Build the app for Windows
#         run: npm run build -- --win

#       - name: Upload Windows Artifacts
#         uses: actions/upload-artifact@v3
#         with:
#           name: windows-artifact
#           path: dist/**/* # Adjust this to your actual output directory

#   build-macos:
#     runs-on: macos-latest
#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v3

#       - name: Set up Node.js
#         uses: actions/setup-node@v3
#         with:
#           node-version: '20'

#       - name: Install dependencies
#         run: npm install

#       - name: Build the app for macOS
#         run: npm run build -- --mac

#       - name: Upload macOS Artifacts
#         uses: actions/upload-artifact@v3
#         with:
#           name: macos-artifact
#           path: dist/**/* # Adjust this to your actual output directory

#   build-linux:
#     runs-on: ubuntu-latest
#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v3

#       - name: Set up Node.js
#         uses: actions/setup-node@v3
#         with:
#           node-version: '20'

#       - name: Install dependencies
#         run: npm install

#       - name: Build the app for Linux
#         run: npm run build -- --linux

#       - name: Upload Linux Artifacts
#         uses: actions/upload-artifact@v3
#         with:
#           name: linux-artifact
#           path: dist/**/* # Adjust this to your actual output directory

# name: Hifiles Desktop App
# env:
#   GH_TOKEN: ${{ secrets.GH_TOKEN }}
# on:
#   push:
#     branches:
#       - main
#   workflow_dispatch:

# jobs:
#   build-windows:
#     runs-on: windows-latest
#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v3

#       - name: Set up Node.js
#         uses: actions/setup-node@v3
#         with:
#           node-version: "20"

#       - name: Install dependencies
#         run: npm install

#       - name: Build the app for Windows
#         run: npm run build -- --win

#       - name: List files in dist directory
#         run: dir dist

#       - name: Upload Windows Artifacts
#         uses: actions/upload-artifact@v4
#         with:
#           name: windows-artifact
#           path: dist/**/*

#   build-macos:
#     runs-on: macos-latest
#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v3

#       - name: Set up Node.js
#         uses: actions/setup-node@v3
#         with:
#           node-version: "20"

#       - name: Install dependencies
#         run: npm install

#       - name: Build the app for macOS
#         run: npm run build -- --mac

#       - name: List files in dist directory
#         run: ls -al dist

#       - name: Upload macOS Artifacts
#         uses: actions/upload-artifact@v4
#         with:
#           name: macos-artifact
#           path: dist/**/*

#   build-linux:
#     runs-on: ubuntu-latest
#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v3

#       - name: Set up Node.js
#         uses: actions/setup-node@v3
#         with:
#           node-version: "20"

#       - name: Install dependencies
#         run: npm install

#       - name: Build the app for Linux
#         run: npm run build -- --linux

#       - name: List files in dist directory
#         run: ls -al dist

#       - name: Upload Linux Artifacts
#         uses: actions/upload-artifact@v4
#         with:
#           name: linux-artifact
#           path: dist/**/*

#   create-release:
#     needs: [build-windows, build-macos, build-linux]
#     runs-on: ubuntu-latest
#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v3

#       - name: Create Release
#         id: create_release
#         uses: actions/create-release@v1
#         with:
#           tag_name: v1.0.14
#           release_name: Release v1.0.14
#           draft: false
#           prerelease: false
#         env:
#           GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}

#       # - name: Upload Windows Artifact to Release
#       #   uses: actions/upload-release-asset@v1
#       #   with:
#       #     upload_url: ${{ steps.create_release.outputs.upload_url }}
#       #     asset_path: dist/hifiles-desktop-app Setup 1.0.14.exe
#       #     asset_name: hifiles-setup-windows-1.0.14.exe
#       #     asset_content_type: application/octet-stream

#       - name: Upload macOS Artifact to Release
#         uses: actions/upload-release-asset@v1
#         with:
#           upload_url: ${{ steps.create_release.outputs.upload_url }}
#           asset_path: dist/hifiles-desktop-app-1.0.14-arm64.dmg
#           asset_name: hifiles-setup-macos-1.0.14.dmg
#           asset_content_type: application/octet-stream

#       - name: Upload Linux Artifact to Release
#         uses: actions/upload-release-asset@v1
#         with:
#           upload_url: ${{ steps.create_release.outputs.upload_url }}
#           asset_path: dist/hifiles-desktop-app-1.0.14-amd64.deb
#           asset_name: hifiles-setup-linux-1.0.14.deb
#           asset_content_type: application/octet-stream

name: Hifiles Desktop App
env:
  GH_TOKEN: ${{ secrets.GH_TOKEN }}
on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build-windows:
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "20"

      - name: Install dependencies
        run: npm install

      - name: Build the app for Windows
        run: npm run build -- --win

      - name: List files in dist directory
        run: dir dist

      - name: Upload Windows Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: windows-artifact
          path: dist/**/*

  build-macos:
    runs-on: macos-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "20"

      - name: Install dependencies
        run: npm install

      - name: Build the app for macOS
        run: npm run build -- --mac

      - name: List files in dist directory
        run: ls -al dist

      - name: Upload macOS Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: macos-artifact
          path: dist/**/*

  build-linux:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "20"

      - name: Install dependencies
        run: npm install

      - name: Build the app for Linux
        run: npm run build -- --linux

      - name: List files in dist directory
        run: ls -al dist

      - name: Upload Linux Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: linux-artifact
          path: dist/**/*

  create-release:
    needs: [build-windows, build-macos, build-linux]
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Download Windows Artifact
        uses: actions/download-artifact@v4
        with:
          name: windows-artifact
          path: dist

      - name: Download macOS Artifact
        uses: actions/download-artifact@v4
        with:
          name: macos-artifact
          path: dist

      - name: Download Linux Artifact
        uses: actions/download-artifact@v4
        with:
          name: linux-artifact
          path: dist

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: v1.1.3
          release_name: Release v1.1.3
          draft: false
          prerelease: false

      - name: Upload Windows Artifact to Release
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: dist/hifiles-desktop-app Setup 1.1.3.exe
          asset_name: hifiles-setup-windows-1.1.3.exe
          asset_content_type: application/octet-stream

      - name: Upload macOS Artifact to Release
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: dist/hifiles-desktop-app-1.1.3-arm64.dmg
          asset_name: hifiles-setup-macos-1.1.3.dmg
          asset_content_type: application/octet-stream

      - name: Upload Linux Artifact to Release
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: dist/hifiles-desktop-app-1.1.3.deb
          asset_name: hifiles-setup-linux-1.1.3.deb
          asset_content_type: application/octet-stream
