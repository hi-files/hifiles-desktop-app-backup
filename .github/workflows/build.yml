name: Hifiles Desktop App

env:
  GH_TOKEN: ${{ secrets.GAALO }}

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build-windows:
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "20"

      - name: Install dependencies
        run: npm install

      - name: Build the app for Windows
        run: npm run build -- --win

      - name: Upload Windows Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: windows-artifact
          path: dist/**/*

  build-macos:
    runs-on: macos-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "20"

      - name: Install dependencies
        run: npm install

      - name: Build the app for macOS
        run: npm run build -- --mac

      - name: Upload macOS Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: macos-artifact
          path: dist/**/*

  build-linux-deb:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "20"

      - name: Install dependencies
        run: npm install

      - name: Build the app for Linux (DEB)
        run: npm run build -- --linux deb

      - name: Upload DEB Artifact
        uses: actions/upload-artifact@v4
        with:
          name: deb-artifact
          path: dist/**/*

  build-linux-rpm:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "20"

      - name: Install dependencies
        run: npm install

      - name: Build the app for Linux (RPM)
        run: npm run build -- --linux rpm

      - name: Upload RPM Artifact
        uses: actions/upload-artifact@v4
        with:
          name: rpm-artifact
          path: dist/**/*

  build-linux-appimage:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "20"

      - name: Install dependencies
        run: npm install

      - name: Build the app for Linux (AppImage)
        run: npm run build -- --linux AppImage

      - name: Upload AppImage Artifact
        uses: actions/upload-artifact@v4
        with:
          name: appimage-artifact
          path: dist/**/*

  create-release:
    needs:
      [
        build-windows,
        build-macos,
        build-linux-deb,
        build-linux-rpm,
        build-linux-appimage,
      ]
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Download Windows Artifact
        uses: actions/download-artifact@v4
        with:
          name: windows-artifact
          path: dist

      - name: Download macOS Artifact
        uses: actions/download-artifact@v4
        with:
          name: macos-artifact
          path: dist

      - name: Download DEB Artifact
        uses: actions/download-artifact@v4
        with:
          name: deb-artifact
          path: dist

      - name: Download RPM Artifact
        uses: actions/download-artifact@v4
        with:
          name: rpm-artifact
          path: dist

      - name: Download AppImage Artifact
        uses: actions/download-artifact@v4
        with:
          name: appimage-artifact
          path: dist

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: v1.1.5
          release_name: Release v1.1.5
          draft: false
          prerelease: false

      - name: Upload Windows Artifact to Release
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: dist/hifiles-desktop-app Setup 1.1.6.exe
          asset_name: hifiles-setup-windows-1.1.6.exe
          asset_content_type: application/octet-stream

      - name: Upload macOS Artifact to Release
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: dist/hifiles-desktop-app-1.1.6-arm64.dmg
          asset_name: hifiles-setup-macos-1.1.6.dmg
          asset_content_type: application/octet-stream

      - name: Upload DEB Artifact to Release
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: dist/hifiles-desktop-app-1.1.6.deb
          asset_name: hifiles-setup-linux-1.1.6.deb
          asset_content_type: application/octet-stream

      - name: Upload RPM Artifact to Release
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: dist/hifiles-desktop-app-1.1.6.rpm
          asset_name: hifiles-setup-linux-1.1.6.rpm
          asset_content_type: application/octet-stream

      - name: Upload AppImage Artifact to Release
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: dist/hifiles-desktop-app-1.1.6.AppImage
          asset_name: hifiles-setup-linux-1.1.6.AppImage
          asset_content_type: application/octet-stream
